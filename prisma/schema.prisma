// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model Page {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  title     String
  content   String
  crawledAt DateTime
  updatedAt DateTime @updatedAt
  terms     DocumentTerm[]
}

model Term {
  id             Int            @id @default(autoincrement())
  term           String         @unique
  totalDocuments Int            @default(0) // For IDF calculation
  documentTerms  DocumentTerm[]
}

model DocumentTerm {
  page   Page   @relation(fields: [pageId], references: [id])
  term   Term   @relation(fields: [termId], references: [id])
  pageId Int
  termId Int
  tf     Float  // Term frequency in the document
  idf    Float  // Inverse document frequency

  @@id([pageId, termId])
}

model Synonym {
  id       Int    @id @default(autoincrement())
  rootTerm String
  synonym  String
}

model CrawlHistory {
  id         Int      @id @default(autoincrement())
  url        String
  status     String   // e.g., "success", "failed"
  startedAt  DateTime
  finishedAt DateTime
}

model SearchQuery {
  id          Int      @id @default(autoincrement())
  query       String
  resultCount Int
  createdAt   DateTime @default(now())
}